<?xml version="1.0" encoding="UTF8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name></display-name>


	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>


	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>CacheFilter</filter-name>
		<filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
		<init-param>
			<param-name>time</param-name>
			<param-value>7200</param-value>
		</init-param>
		<init-param>
			<param-name>scope</param-name>
			<param-value>application</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CacheFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping> 


	<servlet>
		<!-- servlet的命 名===注册名称，这个名称可以任意的 -->
		<servlet-name>ConnectorServlet</servlet-name>
		<!-- servlet 所在包 -->
		<servlet-class>com.ckfinder.connector.ConnectorServlet</servlet-class>
		<init-param>
			<!-- 初始化设置 -->
			<param-name>XMLConfig</param-name>
			<param-value>/WEB-INF/config.xml</param-value>
		</init-param>
		<init-param>
			<!-- 设置是否可以查看debug，在正常时候需要设置为false. -->
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		<!-- load-on-startup 元素在web应用启动的时候指定了 servlet被加载的顺序，它的值必须是一个整数。 如果它的值是一个负整数或是这个元素不存在， 
			那么容器会在该servlet被调用的时候，加载这个servlet 。如果值是正整数或零，容器在配置的时候就加载并初始化这个servlet， 容器必须保证值小的先被加载。如果值相等，容器可以自动选择先加载谁。 
			在此不是必须的 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- 映射的相对路径，主要是在其他地方使用，比如js,页面访问 -->
	<servlet-mapping>
		<servlet-name>ConnectorServlet</servlet-name>
		<url-pattern>/ckfinder/core/connector/java/connector.java
					</url-pattern>
	</servlet-mapping>
	<servlet>
		<description>This is the description of my J2EE component</description>
		<display-name>This is the display name of my J2EE component</display-name>
		<servlet-name>HleftServlet</servlet-name>
		<servlet-class>Control.HleftServlet</servlet-class>
	</servlet>
	<servlet>
		<description>This is the description of my J2EE component</description>
		<display-name>This is the display name of my J2EE component</display-name>
		<servlet-name>HAjaxServlet</servlet-name>
		<servlet-class>Control.HAjaxServlet</servlet-class>
	</servlet>


	<servlet>
		<description>This is the description of my J2EE component</description>
		<display-name>This is the display name of my J2EE component</display-name>
		<servlet-name>FileUpload</servlet-name>
		<servlet-class>Webutils.FileUpload</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>FileUpload</servlet-name>
		<url-pattern>/FileUpload.do</url-pattern>
	</servlet-mapping>

</web-app>
